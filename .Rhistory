submit()
submit()
submit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "acs_id.csv")
acs <- read.csv("acs_id.csv")
View(acs)
var <- acs$ACR = 3 & acs$AGS = 6
var <- (acs$ACR = 3 & acs$AGS = 6)
var <- (acs$ACR = 3) & (acs$AGS = 6)
?which
agricultureLogical <- (acs$ACR = 3) & (acs$AGS = 6)
which(agricultureLogical)
agricultureLogical <- (acs$ACR == 3) & (acs$AGS == 6)
which(agricultureLogical)
?which
dim(acs)
acs[which(agricultureLogical),]
agricultureLogical
agricultureLogical <- (acs$ACR == 3 & acs$AGS == 6)
acs$ACR == 3
acs$AGS == 6
acs <- read.csv("acs_id.csv")
acs$AGS == 6
agricultureLogical <- (acs$ACR == 3 & acs$AGS == 6)
which(agricultureLogical)
install.packages('jpeg')
library(jpeg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpeg")
?jpeg
pic <- jpeg(filename = "jeff.jpeg")
?quantile
pic <- jpeg(filename = "jeff.jpeg", native=TRUE)
quantile(pic, native=TRUE, probs = c(0.3,0.8))
pic <- readJPEG("jeff.jpeg", native = TRUE)
quantile(pic, probs = c(0.3,0.8))
con  <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
gdp <- read.csv(con)
educ <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
View(educ)
View(gdp)
match(educ$CountryCode, gdp$X)
library(dplyr)
educ <- tbl_df(educ)
gdp <- tbl_df(gdp)
sum(educ$CountryCode %in% gdp$X)
?match
sum(gdp$X %in% educ$CountryCode)
?arrange
arrange(gdp, desc(X.3))
gdp_arrange <- arrange(gdp, desc(X.3))
View(gdp_arrange)
educ <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", header = TRUE)
gdp <- read.csv(con, header = TRUE)
View(gdp)
?merge
gdp <- gdp[5:220,]
gdp[:-1,]
gdp[-1,]
gdp <- gdp[,c("X","X.1","X.2","X.3")]
mutate(gdp, X.1 = NULL)
gdp <- mutate(gdp, X.1 = NULL)
setNames(gdp,c("CountryCode","Long.Name","gdp"))
gdp <- setNames(gdp,c("CountryCode","Long.Name","gdp"))
gdp$CountryCode %in% educ$CountryCode
sum(gdp$CountryCode %in% educ$CountryCode)
dat <- merge(gdp,educ, by = "CountryCode")
gdp <- gdp[gdp$CountryCode != "",]
educ <- educ[educ$CountryCode !=""]
educ <- educ[educ$CountryCode !="",]
dat <- merge(gdp,educ, by = "CountryCode")
sum(unique(dat$gdp))
sum(!is.na(unique(dat$gdp)))
library(data.table)
?data.table
library(dplyr)
?dplyr
browseVignettes(package = "dplyr")
?tbl_df
acs_id <- read.csv("acs_id.csv")
agricultureLogical <- acs_id$ACR == 3 & acs_id$AGS == 6
acs_id <- data.table(acs_id)
ans <- acs_id[which(agricultureLogical),]
?which
ans <- which(agricultureLogical)
library(jpeg)
pic <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
pic <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
pic <- readJPEG("jeff.jpg", native = TRUE)
?readJPEG
pic <- readJPEG("jeff.jpeg", native = TRUE)
?quantile
quantile(pic, probs = c(.3,.8))
?arrange
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:curl", unload=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "ed.csv")
gdp <- csv.read("gdp.csv")
gdp <- read.csv("gdp.csv")
View(gdp)
gdp <- gdp[X != ""]
gdp <- gdp[gdp$X != ""]
gdp$X
gdp <- gdp[gdp$X != "",]
gdp <- read.csv("gdp.csv")
gdp <- gdp[gdp$X != "" & gdp$Gross.domestic.product.2012 != "",]
gdp <- gdp[,c(1,2,4,5)]
?names
colnames(gdp, c("CountryCode","GDPRank","Name","GDPSize"))
colnames(gdp, list("CountryCode","GDPRank","Name","GDPSize"))
?colnames
colnames(gdp) <- list("CountryCode","GDPRank","Name","GDPSize")
ed <- read.csv("ed.csv")
View(ed)
?merge
library(pylr)
library(dpylr)
library("dplyr")
?merge
dat <- merge(gdp,ed,by="CountryCode")
View(dat)
dat <- tbl_df(dat)
?arrange
arrange(dat, desc(GDPRank))
arrange(dat, desc(GDPRank))[13]
dat <- arrange(dat, desc(GDPRank))
dat$GDPRank <- as.numeric(dat$GDPRank)
dat <- arrange(dat, desc(GDPRank))
dat[13,]
dat <- merge(gdp,ed[,c(1,2,4)],by="CountryCode")
arrange(dat,GDPrank)
arrange(dat,GDPRank)
dat <- merge(gdp,ed[,c(1,2,4)],by="CountryCode", all = TRUE)
View(dat)
dat <- merge(gdp,ed,by="CountryCode",)
View(dat)
dat <- merge(gdp,ed,by="CountryCode")
dat1 <- dat[order(dat$GDPRank, decreasing = TRUE),]
View(dat1)
rm("dat1")
dat1 <- arrange(dat, GDPRank, Name)
View(dat1)
dat$GDPRank <- as.numeric(dat$GDPRank)
dat1 <- arrange(dat, GDPRank, Name)
dat <- merge(gdp,ed,by="CountryCode")
dat$GDPRank
gdp <- data.table(gdp)
ed <- data.table(ed)
dat <- merge(gdp,ed,by="CountryCode")
dat$GDPRank
as.numeric(dat$GDPRank)
dat1 <- arrange(dat, GDPSize, Name)
View(dat1)
rm('dat1')
dat1 <- arrange(dat, as.numeric(GDPRank), Name)
dat1 <- arrange(dat, as.numeric(as.character(GDPRank)), Name)
?as.character
as.character(dat1$GDPRank)
as.numeric(as.character(dat1$GDPRank))
?levels
?gl()
dat1 <- arrange(dat, as.character(GDPRank), Name)
dat1 <- arrange(dat, as.numeric(as.character(GDPRank)), Name)
dat1 <- arrange(dat, desc(as.numeric(as.character(GDPRank))), Name)
dtGDP <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP[, list(X, X.1, X.3, X.4)]
dtGDP[, list(X, X.1, X.3)]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
?setnames
str(dtGDP)
setnames(dtGDP,c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
c("CountryCode", "rankingGDP",
"Name", "gdp"))
setnames(dtGDP,c("CountryCode", "rankingGDP",
"Name", "gdp"))
View(dtGDP)
dtGDP$gdp
as.character(dtGDP$gdp)
dtGDP[dtGDP$rankingGDP != ""]
dtGDP <- dtGDP[dtGDP$rankingGDP != ""]
as.character(dtGDP$gdp)
as.numeric(as.character(dtGDP$gdp))
as.numeric(dtGDP$gdp)
?read.csv
dtGDP1 <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215, colClasses = character))
dtGDP1 <- data.table(read.csv("gdp.csv", skip = 4, nrows = 215, colClasses = "character"))
str(dtGDP1)
as.numeric(dtGDP1$X.4)
(dtGDP1$X.4)
dtEd <- data.table(read.csv("ed.csv"))
rm("dtGDP1")
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
View(dt)
dt <- dt[dt$rankingGDP != "",]
str(dt)
arrange(dt,rankingGDP)
arrange(dt,rankingGDP)[13]
arrange(dt,desc(rankingGDP))[13]
str(dat)
dt <- arrange(dt,desc(rankingGDP))
dt[13]
?group_by
dt_grouped <- group_by(dt, Income.Group)
mean(dt_grouped$rankingGDP)
summarize(dt_grouped, mean(Income.Group))
summarize(dt_grouped, mean(rankingGDP))
str(dt)
dt[,mean(rankingGDP), by = Income.Group]
?quantile
quantile(dt$rankingGDP, probs = (0,1,0.2))
seq(0,1,0.2)
quantile(dt$rankingGDP, probs = seq(0,1,0.2))
?cut
dt$Group <- cut(dt, quantile(dt$rankingGDP, probs = seq(0,1,0.2)))
dt$Group <- cut(dt$rankingGDP, quantile(dt$rankingGDP, probs = seq(0,1,0.2)))
table(dt$Group)
table(dt$Income.Group, dt$Group)
?mutate
library(dplyr)
?mutate
tbl <- HairEyeColor
library(data.table)
tbl <- data.table(tbl)
table(tbl$Hair,tbl$Eye)
summarize(tbl)
tbl$Hair
tbl[,.N,by = Hair]
View(tbl)
?dplyr
tbl_m <- tbl[Sex=="Male",]
tbl_f <- tbl[Sex=="Female",]
merge(tbl_m,tbl_f,by = c(Hair,Eye))
merge(tbl_m,tbl_f,by = c("Hair","Eye"))
tbl <- merge(tbl_m,tbl_f,by = c("Hair","Eye"))
mutate(tbl,N = N.x+N.y)
mutate(tbl, N = N.x+N.y)
?mutate
mutate(tbl, tot = N.x+N.y)
View(tbl)
mutate(tbl, Sex.x = NULL)
View(tbl)
str(tbl)
mutate(tbl, total = N.x+N.y)
tbl
tbl <- mutate(tbl, total=N.x+N.y)
tbl <- mutate(tbl, c(Sex.x,Sex.y) = NULL)
tbl <- mutate(tbl, Sex.x = NULL)
tbl <- mutate(tbl, Sex.y = NULL)
tbl <- mutate(tbl, N.y = NULL, N.x = NULL)
group_by(tbl, Hair)
summarize(tbl, Eye)
table(tbl)
table(tbl$Hair)
table(tbl$Hair, tbl$Eye, total)
table(tbl$Hair, tbl$Eye)
table(tbl$total)
tbl <- mutate(tbl, pct = total/sum(total))
tbl <- mutate(tbl, pct = total/sum(total)*100)
?summary
table(tbl[Hair,total])
table(tbl[,total, by = Hair])
table(tbl[,total, by = Hair], tbl[,total, by = Eye])
table(tbl[,total, by = Eye])
summary(tbl, tbl$Hair, tbl$Eye)
as.table(tbl)
as.table(tbl[,c(Hair,Eye,total)])
tbl[,c(Hair,Eye,total)]
tbl[,list(Hair,Eye,total)]
as.table(tbl[,list(Hair,Eye,total)])
tbl <- tbl[,list(Hair,Eye,total)]
table(tbl)
?table
table(tbl[,total])
summary(tbl, sum(tbl$total))
by_group(tbl, Hair)
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US"|country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, pacakge, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm('mydf')
cran
?group_by
group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_packge, mean(size))
summarize(by_package, mean(size))
submit()
View(pack_sum)
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_counts_sorted)
View(top_unique_sorted)
submit()
subit()
submit()
submit()
View(result3)
submit()
submit
submit()
submit()
submit()
submit()
library(dplyr)
?dplyr
browseVignettes(package = "dplyr")
?slice
slice(mtcars, n())
mtcars
slice(mtcars, 5:n())
filter(mtcars, mpg > 20)
cars <- filter(mtcars, mpg > 20)
cars
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
?tidyr
reset()
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
submit()
submit()
students3
submit()
submit()
submit()
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
?passed
passed
View(failed)
View(passed)
failed
mutate(passed, status = passed)
passed <- mutate(passed, status = passed)
passed <- mutate(passed, status = "passed")
mutate(failed, status = "failed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
submit()
exit
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=11, minutes=31)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive
arive <- with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17,2008", tz="Singapore")
last_time <- mdy("June 17,2008", tz="Singapore")
last_time <- mdy("June 17,2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
names <- tolower(names)
source('~/Data Science/tidydata/run_analysis.R')
source('~/Data Science/tidydata/run_analysis.R')
getwd()
setwd("~/Data Science/tidydata")
source('~/Data Science/tidydata/run_analysis.R')
View(dat)
?tolower
source('~/Data Science/tidydata/run_analysis.R')
View(tidy)
source('~/Data Science/tidydata/codebook.R')
source('~/Data Science/tidydata/codebook.R')
source('~/Data Science/tidydata/codebook.R')
View(codebook)
?grep
source('~/Data Science/tidydata/codebook.R')
source('~/Data Science/tidydata/codebook.R')
source('~/Data Science/tidydata/codebook.R')
source('~/Data Science/tidydata/run_analysis.R')
file.exists(".UCI HAR Dataset/")
file.exists("./UCI HAR Dataset/")
?cat
?download.file
